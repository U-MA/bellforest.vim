Describe Vector
  Before each
    let v = bellforest#util#Vector#new()
  End

  Describe .push_back()
    It adds a element at the end of vector
      call v.push_back(1)
      call v.push_back(2)
      call v.push_back(3)
      Assert Equals(v.pop_back(), 3)
      Assert Equals(v.pop_back(), 2)
      Assert Equals(v.pop_back(), 1)
    End
  End

  Describe .size()
    It returns 0 when init
      Assert Equals(v.size(), 0)
    End

    It returns 3 after push_back() three times
      call v.push_back(1)
      call v.push_back(2)
      call v.push_back(3)

      Assert Equals(v.size(), 3)
    End

    It returns 3 after push_back() four times and pop_back() once
      call v.push_back(1)
      call v.push_back(2)
      call v.push_back(3)
      call v.push_back(4)
      call v.pop_back()

      Assert Equals(v.size(), 3)
    End
  End

  Describe .erase_object()
    It erases an object
      call v.push_back(1)
      call v.erase_object(1)

      Assert Equals(v.size(), 0)
    End

    It erases an dictionary
      call v.push_back({ 'a' : 0 })
      call v.erase_object(v.get(0))

      Assert Equals(v.size(), 0)
    End
  End

  Describe .clear()
    It empty vector's data
      call v.push_back(1)
      call v.push_back(2)
      call v.empty()
      Assert Equals(v.size(), 0)
    End
  End
End
